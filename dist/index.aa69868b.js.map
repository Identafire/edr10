{"mappings":"AAAA,MAAM,aAAa,OAAO,UAAU,CAAC;AAErC,SAAS,uBAAuB,KAAK;IACnC,IAAI,MAAM,OAAO,EAAE;QACjB,4DAA4D;QAC5D,QAAQ,GAAG,CAAC;QACZ,EAAE,YAAY,WAAW,CAAC;IAC5B,OAAO;QACL,kEAAkE;QAClE,QAAQ,GAAG,CAAC;QACZ,EAAE,YAAY,OAAO,CAAC;IACxB;AACF;AAEA,WAAW,gBAAgB,CAAC,UAAU;AAEtC,6CAA6C;AAC7C,uBAAuB;AAGvB,aAAa;AAEb,SAAS;IACP,EAAE,YAAY,WAAW,CAAC;IAC1B,EAAE,YAAY,WAAW,CAAC;AAC5B,EAIA,uCAAuC;CACvC,qCAAqC;CACrC,uCAAuC;CACvC,uCAAuC;CACvC,0CAA0C;CAC1C,uCAAuC;CACvC,wCAAwC;CACxC,yCAAyC;CACzC,wCAAwC;CACxC,qCAAqC;CACrC,uCAAuC;CACvC,sCAAsC;CACtC,8BAA8B;CAC9B,yBAAyB;CAEzB,kBAAkB;CAClB,uBAAuB;CACvB,kDAAkD;CAClD,kDAAkD;CAElD,mBAAmB;CACnB,2BAA2B;CAC3B,YAAY;CACZ,iBAAiB;CACjB,mEAAmE;CAEnE,wBAAwB;CACxB,OAAO;CACP,WAAW;CACX,KAAK;CAEL,8BAA8B;CAC9B,kBAAkB;CAElB,oBAAoB;CACpB,kBAAkB;CAClB,yBAAyB;CACzB,uCAAuC;CACvC,OAAO;CAEP,mEAAmE;CACnE,kCAAkC;CAClC,IAAI;CAEJ,kCAAkC;CAClC,yBAAyB;CACzB,uBAAuB;CAEvB,4CAA4C;CAC5C,gCAAgC;CAChC,8BAA8B;CAC9B,MAAM;CAEN,wBAAwB;CACxB,uBAAuB;CACvB,IAAI;CAEJ,gDAAgD;CAChD,iCAAiC;CACjC,iDAAiD;CACjD,sEAAsE;CACtE,mBAAmB;CACnB,mCAAmC;CACnC,WAAW;CACX,eAAe;CACf,+DAA+D;CAC/D,sEAAsE;CACtE,mBAAmB;CACnB,mCAAmC;CACnC,WAAW;CACX,QAAQ;CAER,2CAA2C;CAC3C,QAAQ;CACR,IAAI","sources":["src/js/main.js"],"sourcesContent":["const mediaQuery = window.matchMedia('(min-width: 576px)');\n\nfunction handleMediaQueryChange(event) {\n  if (event.matches) {\n    // The media query matches, execute code for smaller screens\n    console.log('Screen width is 576px or more');\n    $('.igation').removeClass('visually-hidden');\n  } else {\n    // The media query does not match, execute code for larger screens\n    console.log('Screen width is less than 576px');\n    $('.igation').addlass('visually-hidden');\n  }\n}\n\nmediaQuery.addEventListener('change', handleMediaQueryChange);\n\n// Call the handler once to set initial state\nhandleMediaQueryChange(mediaQuery);\n\n\n//open switch\n\nfunction clickToOpen() {\n  $('#mainNav').toggleClass('close');\n  $('#mainNav').toggleClass('open');\n}\n\n\n\n// // import 'bootstrap/js/dist/alert';\n// import 'bootstrap/js/dist/button';\n// import 'bootstrap/js/dist/carousel';\n// import 'bootstrap/js/dist/collapse';\n// // import 'bootstrap/js/dist/dropdown';\n// // import 'bootstrap/js/dist/modal';\n// import 'bootstrap/js/dist/offcanvas';\n// // import 'bootstrap/js/dist/popover';\n// import 'bootstrap/js/dist/scrollspy';\n// // import 'bootstrap/js/dist/tab';\n// // import 'bootstrap/js/dist/toast';\n// import 'bootstrap/js/dist/tooltip';\n// define an observer instance\n// const numSteps = 20.0;\n\n// let boxElement;\n// let prevRatio = 0.0;\n// let increasingColor = \"rgb(40 40 190 / ratio)\";\n// let decreasingColor = \"rgb(190 40 40 / ratio)\";\n\n// // Set things up\n// window.addEventListener(\n//   \"load\",\n//   (event) => {\n//     boxElement = document.querySelector(\"#arrowIncreaseDemand\");\n\n//     createObserver();\n//   },\n//   false,\n// );\n\n// function createObserver() {\n//   let observer;\n\n//   let options = {\n//     root: null,\n//     rootMargin: \"0px\",\n//     threshold: buildThresholdList(),\n//   };\n\n//   observer = new IntersectionObserver(handleIntersect, options);\n//   observer.observe(boxElement);\n// }\n\n// function buildThresholdList() {\n//   let thresholds = [];\n//   let numSteps = 20;\n\n//   for (let i = 1.0; i <= numSteps; i++) {\n//     let ratio = i / numSteps;\n//     thresholds.push(ratio);\n//   }\n\n//   thresholds.push(0);\n//   return thresholds;\n// }\n\n// function handleIntersect(entries, observer) {\n//   entries.forEach((entry) => {\n//     if (entry.intersectionRatio > prevRatio) {\n//       entry.target.style.backgroundColor = increasingColor.replace(\n//         \"ratio\",\n//         entry.intersectionRatio,\n//       );\n//     } else {\n//       (\"#arrowIncreaseElement\").document.addClass(\"active\");\n//       entry.target.style.backgroundColor = decreasingColor.replace(\n//         \"ratio\",\n//         entry.intersectionRatio,\n//       );\n//     }\n\n//     prevRatio = entry.intersectionRatio;\n//   });\n// }\n"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}